#!/usr/bin/env node

"use strict";function t(t){return t&&"object"==typeof t&&"default"in t?t.default:t}var s=require("commander"),i=require("child_process"),e=require("fs"),o=t(e),r=t(require("path")),n=t(require("fs-extra")),a=t(require("open"));const c="@mate-academy/scripts";var l="0.7.12";function p(t,s=!0,e=process.cwd()){let o={stdio:"ignore"};s&&(o={stdio:"inherit",cwd:e});const r=i.execSync(t,o);return r?r.toString():r}function h(t,s=!0){try{return p(t,s)}catch(t){process.exit(1)}}const m={shouldBindStdout:!0,cwd:process.cwd()};function u(t,s=m){const{shouldBindStdout:e=!0,cwd:o}=s;return new Promise((s,r)=>{const n={cwd:o},a=i.exec(t,n);let c="";e&&(a.stdout&&a.stdout.on("data",t=>{c+=t.toString(),console.log(t)}),a.stderr&&a.stderr.on("data",t=>{console.error(t)})),a.on("close",i=>{i>0?r(new Error(`${t}, errorCode: ${i}`)):s(c)})})}function g(t){return t.includes("package.json")}function y(t){if("test"===process.env.NODE_ENV)return!0;let s;try{const i=o.readFileSync(r.join(t,"package.json"),{encoding:"utf-8"});s=JSON.parse(i)}catch(t){s=null}return s&&s.devDependencies&&s.devDependencies["@mate-academy/scripts"]}function d(t){return"/"===t}function w(t){return Object.entries(t).filter(([,t])=>"boolean"!=typeof t||t).reduce((t,[s,i])=>`${t} --${s}${"boolean"==typeof i?"":"="+i}`,"")}class j{constructor(t){this.versionString=t,this.validate();const[s,i,e]=this.getParts();this.major=s,this.minor=i,this.patch=e}static fromVersionString(t){return new j(t)}static fromVersionList(t){const s=this.getVersionStringFromVersionList(t);return new j(s)}isHigher(t){return!t||(this.major>t.major||!(this.major<t.major)&&(this.minor>t.minor||!(this.minor<t.minor)&&(this.patch>t.patch||(this.patch,t.patch,!1))))}static getVersionStringFromVersionList(t){return(s=t.split("@"))[s.length-1];var s}validate(){const t=this.versionString.split(".");3!==t.length&&j.throwSemverError();t.every(t=>!Number.isNaN(Number(t)))||j.throwSemverError()}getParts(){return this.versionString.split(".").map(Number)}static throwSemverError(){throw new Error("Semver should contain 3 numbers divided with point(.)")}}var f,D,S,v,R,b,k,T;!function(t){t.None="none",t.Layout="layout",t.LayoutDOM="layoutDOM",t.Javascript="javascript",t.Typescript="typescript",t.React="react",t.ReactTypescript="reactTypescript"}(f||(f={}));class N{constructor(t){this.projectType=f.None,this.logNoImplementationWarning=()=>{console.warn(`No implementation for command ${this.constructor.name} for ${this.projectType} project`)},this[D]=this.logNoImplementationWarning,this[S]=this.logNoImplementationWarning,this[v]=this.logNoImplementationWarning,this[R]=this.logNoImplementationWarning,this[b]=this.logNoImplementationWarning,this[k]=this.logNoImplementationWarning,this[T]=this.logNoImplementationWarning,this.rootDir=t}async run(t){this.setProjectType();try{await this.common(t),await this[this.projectType](t)}catch(t){process.exit(1)}}setProjectType(){if(this.projectType!==f.None)return;const{mateAcademy:t}=JSON.parse(n.readFileSync(r.join(this.rootDir,"package.json"),{encoding:"utf-8"}));t&&t.projectType?this.projectType=t.projectType:N.logProjectTypeWarning()}static logProjectTypeWarning(){console.warn('package.json should contain\n{\n  ...\n  "mateAcademy": {\n    "projectType": "layout" | "javascript" | "react" | "reactTypescript" | "typescript" | "layoutDOM"\n  }\n}\n')}child(t){return new t(this.rootDir)}}D=f.None,S=f.Layout,v=f.LayoutDOM,R=f.Javascript,b=f.Typescript,k=f.React,T=f.ReactTypescript;class P{constructor(t){return this.rootDir=t,this.configPath=r.join(this.rootDir,"./backstopConfig.js"),this.dataDir=r.join(this.rootDir,"backstop_data"),this.referencesDir=r.join(this.dataDir,"bitmaps_reference"),this.testResultsDir=r.join(this.dataDir,"bitmaps_test"),this.reportDir=this.dataDir,P.__instance||(P.__instance=this),P.__instance}test(){n.existsSync(this.configPath)&&(this.ensureReferences(),this.cleanTestResults(),P.run("test",{config:this.configPath}))}ensureReferences(){this.areReferencesExists()||this.loadReferences()}areReferencesExists(){return n.existsSync(this.referencesDir)}cleanTestResults(){n.removeSync(this.testResultsDir)}loadReferences(){n.existsSync(this.configPath)&&(this.cleanReference(),P.run("reference",{config:this.configPath}))}cleanReference(){n.removeSync(this.referencesDir)}static run(t,s){h(`npx backstop ${t} ${w(s)}`)}}class O{constructor(t){this.rootDir=t,this.baseOptions={"out-dir":r.join(this.rootDir,"dist")},this.source=r.join(this.rootDir,"src/index.html")}serve({showLogs:t,open:s}){const i={...this.baseOptions,open:s,port:8080};this.run("serve",i,"development",t)}build(){const t={...this.baseOptions,"public-url":"./"};this.run("build",t,"production")}run(t,s,i="development",e=!1){const o=w(s),r=`cross-env NODE_ENV=${i} npx parcel ${t} ${O.escapePathSpaces(this.source)} ${o}`;e&&console.log(r),p(r,e)}static escapePathSpaces(t){return t.replace(" ","\\ ")}}class E{once(){return p("npx jest ./")}watch(){return p("npx jest ./ --watch")}}const C={envs:{local:!0,global:!1},silent:!1},L={isGlobal:!1,versionString:"",silent:!1};class x{constructor(t){this.packageName=t}async ensure({envs:t=C.envs,silent:s=C.silent}=C){const i=await this.getVersions();t.local&&!i.local&&await this.install({silent:s}),t.global&&!i.global&&await this.install({silent:s,isGlobal:!0})}async update({envs:t=C.envs,silent:s=C.silent}=C){const i=await this.getVersions();t.local&&i.available.isHigher(i.local)&&await this.install({silent:s}),t.global&&i.available.isHigher(i.global)&&await this.install({silent:s,isGlobal:!0})}async install({isGlobal:t=L.isGlobal,versionString:s=L.versionString,silent:i=L.silent}=L){let e=s;if(!e){e=(await this.getVersions()).available.versionString}if(!i){const s=await this.getVersions(),i=s[t?"global":"local"];console.log(`Update ${t?"global":"local"} ${this.packageName} from ${(null==i?void 0:i.versionString)||'"none"'} to ${s.available.versionString}`)}await u(`npm i ${t?"-g":""} ${this.packageName}@${e}`,{shouldBindStdout:!1})}async getVersions(){return this._versions||await this.setVersions(),this._versions}async setVersions(){const[t,s,i]=await Promise.all([this.getAvailableVersion(),this.getGlobalVersion(),this.getLocalVersion()]);this._versions={available:t,global:s,local:i}}async getAvailableVersion(){const t=await u(`npm view ${this.packageName} version`);return j.fromVersionString(t)}async getGlobalVersion(){return this.getInstalledVersion(!0)}async getLocalVersion(){return this.getInstalledVersion()}async getInstalledVersion(t=!1,s=0){try{const i=await u(`npm ls ${t?"-g":""} --deps=${s} ${this.packageName} version`);return j.fromVersionList(i)}catch(t){return null}}}let $=(()=>{class t extends N{constructor(t){super(t),this.gitHooksDestinationDir=r.join(this.rootDir,"./.git/hooks"),this.layout=async()=>{this.copyGitIgnore(f.Layout),this.copyProjectTypeSpecificConfigs(f.Layout),this.copyLinthtmlConfig(),this.initGitHooks(f.Layout),await this.ensureCrossEnvInstalled()},this.layoutDOM=async()=>{this.copyGitIgnore(f.LayoutDOM),this.copyProjectTypeSpecificConfigs(f.LayoutDOM),this.copyLinthtmlConfig(),this.initGitHooks(f.LayoutDOM),await this.ensureCrossEnvInstalled()},this.javascript=()=>{this.copyGitIgnore(f.Javascript),this.copyProjectTypeSpecificConfigs(f.Javascript),this.initGitHooks(f.Javascript)},this.crossEnvPackageService=new x("cross-env")}common(){this.copyCommonConfigs()}copyCommonConfigs(){const s=r.join(t.configsDir,"common");n.copySync(s,this.rootDir)}copyGitIgnore(s){const i=".gitignore";n.copySync(r.join(t.configsDir,"gitignoreTemplates",".gitignore."+s),r.join(this.rootDir,i))}copyProjectTypeSpecificConfigs(s){const i=r.join(t.configsDir,s);n.copySync(i,this.rootDir)}copyLinthtmlConfig(){const s=r.join(this.rootDir,t.lintHtmlConfigDir,t.lintHtmlConfigFileName),i=r.join(this.rootDir,t.lintHtmlConfigFileName);n.copyFileSync(s,i)}initGitHooks(s){const i=r.join(t.gitHooksSourceDir,s);n.readdirSync(i).forEach(t=>this.initGitHook(i,t))}initGitHook(t,s){const i=r.join(t,s),e=r.join(this.gitHooksDestinationDir,s);n.copySync(i,e)}async ensureCrossEnvInstalled(){await this.crossEnvPackageService.ensure({silent:!0})}}return t.lintHtmlConfigDir="node_modules/@mate-academy/linthtml-config",t.lintHtmlConfigFileName=".linthtmlrc.json",t.configsDir=r.join(__dirname,"../configs"),t.gitHooksSourceDir=r.join(t.configsDir,"git-hooks"),t})();class I extends N{constructor(){super(...arguments),this.layout=t=>{const{html:s,files:i,styles:e,javascript:o}=t;e&&I.lintStyles(i),s&&I.lintHtml(i),o&&I.lintJs(i)},this.layoutDOM=t=>{this.layout(t)},this.javascript=t=>{const{javascript:s,files:i}=t;s&&I.lintJs(i)}}common(t){}static lintHtml(t){h("npx linthtml "+(t?t.join(" "):"./src/**/*.html"))}static lintStyles(t){h("npx stylelint "+(t?t.join(" "):"./src/**/*.css ./src/**/*.scss"))}static lintJs(t){h("npx eslint "+(t?t.join(" "):"./src"))}}class V{constructor(t){this.rootDir=t,this.shouldOpen=!0,this.shouldShowLogs=!1,this.reportsDir=r.join(this.rootDir,"reports"),this.rawReportsDir=r.join(this.rootDir,"raw_reports"),this.mergedReport=r.join(this.reportsDir,"report.json")}async run(t){this.processOptions(t),this.log("CYPRESS RUN CALLED",t),await this.cleanPrevReports(),this.log("OLD REPORTS REMOVED");let s=!1;try{this.log("RUN CYPRESS"),await this.runCypress(),this.log("CYPRESS TESTS RUN SUCCESS")}catch(t){this.log("CYPRESS TESTS RUN FAIL",t),s=!0}finally{const t=await this.prepareReports();this.log("TEST REPORTS PREPARED",t),t&&this.shouldOpen?(this.log("OPEN REPORTS IN BROWSER"),await this.openReportInBrowser()):this.log("SKIP OPEN REPORTS IN BROWSER ACCORDING"),s&&process.exit(1)}}processOptions(t={}){const{showLogs:s=!1,open:i=!0}=t;this.shouldOpen=i,this.shouldShowLogs=s}async cleanPrevReports(){await Promise.all([this.cleanReports(),this.cleanRawReports()])}async cleanReports(){await n.remove(this.reportsDir)}async cleanRawReports(){await n.remove(this.rawReportsDir)}runCypress(){return u("npx cypress run",{shouldBindStdout:this.shouldShowLogs})}async prepareReports(){return await this.hasRawReports()?(await this.makeReportsDir(),await this.mergeReports(),await this.generateHtmlReport(),await this.cleanRawReports(),!0):(this.log("REPORTS WAS NOT CREATED DURING TEST RUN. SKIP REPORTS PREPARING"),await this.cleanRawReports(),!1)}async hasRawReports(){if(!await n.pathExists(this.rawReportsDir))return!1;return(await n.readdir(this.rawReportsDir)).length>0}async makeReportsDir(){await n.mkdir(this.reportsDir)}async mergeReports(){const t=r.join(this.rawReportsDir,"*.json");await u(`npx mochawesome-merge "${t}" > ${this.mergedReport}`,{shouldBindStdout:this.shouldShowLogs})}async generateHtmlReport(){await u(`npx marge -o ${this.reportsDir} ${this.mergedReport}`,{shouldBindStdout:this.shouldShowLogs})}async openReportInBrowser(){await a("file://"+r.join(this.reportsDir,"report.html"))}log(t,s){this.shouldShowLogs&&(s?console.log(t,s):console.log(t))}}class H extends N{constructor(){super(...arguments),this.parcel=new O(this.rootDir),this.layout=()=>{n.removeSync(r.join(this.rootDir,"dist")),this.parcel.build()},this.layoutDOM=()=>{this.layout()}}common(){}}let M=(()=>{class t extends N{constructor(){super(...arguments),this.layout=async()=>{await u("npm i -D @mate-academy/scripts");const s=await this.getPackage();s.scripts=t.scripts.layout,delete s["lint-staged"],delete s.husky,await e.promises.writeFile(r.join(this.rootDir,"package.json"),JSON.stringify({...s,...t.mateConfig.layout},null,2)),await Promise.all([t.safeRun(n.copy(r.join(this.rootDir,"config/backstop/backstopConfig.js"),r.join(this.rootDir,"backstopConfig.js"))),t.safeRun(n.remove(r.join(this.rootDir,"config"))),t.safeRun(n.remove(r.join(this.rootDir,"server.js"))),t.safeRun(n.remove(r.join(this.rootDir,".travis.yml"))),t.safeRun(n.remove(r.join(this.rootDir,"gulpfile.js"))),t.safeRun(n.remove(r.join(this.rootDir,".linthtmlrc")))]),await u("npm rm @linthtml/gulp-linthtml gulp-autoprefixer gulp-clean gulp-eslint gulp-replace-path gulp-sass gulp-sourcemaps gulp-stylelint gulp @mate-academy/browsersync-config htmllint htmllint-cli husky lint-staged rimraf @mate-academy/htmllint-config"),await u("npm i -D @linthtml/linthtml stylelint-scss @mate-academy/linthtml-config node-sass parcel"),await u("npm i")},this.layoutDOM=async()=>{const s=await this.getPackage();await e.promises.writeFile(r.join(this.rootDir,"package.json"),JSON.stringify({...s,...t.mateConfig.layoutDOM},null,2)),await u("npm rm backstopjs @mate-academy/backstop-config gulp-htmllint"),await u("rm -rf "+r.join(this.rootDir,"backstopConfig.js")),await u("npm i -D cypress eslint-plugin-cypress mochawesome mochawesome-merge mochawesome-report-generator"),await u("mkdir "+r.join(this.rootDir,"cypress")),await u("mkdir "+r.join(this.rootDir,"cypress","integration")),await u(`cp ${r.join(__dirname,"../","configs","custom",f.LayoutDOM,"page.spec.js")} ${r.join(this.rootDir,"cypress","integration","page.spec.js")}`),await u("npm i")},this.javascript=async()=>{await u("npm i -D @mate-academy/scripts");const s=await this.getPackage();s.scripts=t.scripts.javascript,delete s["lint-staged"],delete s.husky,await e.promises.writeFile(r.join(this.rootDir,"package.json"),JSON.stringify({...s,...t.mateConfig.javascript},null,2)),await t.safeRun(n.remove(r.join(this.rootDir,".travis.yml"))),await u("npm rm husky lint-staged"),await u("npm i"),await u("npx eslint ./ --fix")},this.react=()=>{},this.reactTypescript=()=>{}}async common(t){await this[t.projectType]()}async getPackage(){const t=await n.readFile(r.join(this.rootDir,"package.json"),{encoding:"utf-8"});return JSON.parse(t)}static async safeRun(t){try{await t}catch(t){console.error("Migration error",t)}return!0}}return t.scripts={layout:{init:"mate-scripts init",start:"mate-scripts start",lint:"mate-scripts lint","test:only":"mate-scripts test",build:"mate-scripts build",deploy:"mate-scripts deploy",update:"mate-scripts update",postinstall:"npm run update",test:"npm run lint && npm run test:only"},javascript:{init:"mate-scripts init",start:"mate-scripts start",lint:"mate-scripts lint","test:only":"mate-scripts test",update:"mate-scripts update",postinstall:"npm run update",test:"npm run lint && npm run test:only"}},t.mateConfig={[f.None]:null,[f.Layout]:{mateAcademy:{projectType:f.Layout}},[f.LayoutDOM]:{mateAcademy:{projectType:f.LayoutDOM}},[f.Javascript]:{mateAcademy:{projectType:f.Javascript}},[f.React]:{mateAcademy:{projectType:f.React}},[f.ReactTypescript]:{mateAcademy:{projectType:f.ReactTypescript}},[f.Typescript]:{mateAcademy:{projectType:f.Typescript}}},t})();const _=new s.Command,G=new class{constructor(){this.rootDir=function(){let t=process.cwd(),s=o.readdirSync(t);try{for(;!g(s)||!y(t);){if(d(t))throw new Error("Command should be run inside project folder with @mate-academy/scripts as devDependency");t=r.join(t,"../"),s=o.readdirSync(t)}}catch(s){console.error(s.message),t=process.cwd()}return t}()}make(t,s,i=!1){const e=new t(i?process.cwd():this.rootDir);return s?(...t)=>{const i=t.pop(),o=s(i,...t);return e.run(o)}:()=>e.run()}};_.name("mate-scripts").version(l,"-v --version","output current version"),_.command("init").description("init linters and configs").action(G.make($)),_.command("start").option("-l, --logs","show internal commands logs",!1).option("-o, --open","open web browser after start",!0).description("run development server").action(G.make(class extends N{constructor(){super(...arguments),this.parcel=new O(this.rootDir),this.jest=new E,this.layout=t=>{this.parcel.serve({showLogs:t.shouldShowInternalLogs,open:t.open})},this.layoutDOM=t=>{this.layout(t)},this.javascript=()=>{this.jest.watch()}}common(){}},t=>{const{logs:s,open:i}=t;return{shouldShowInternalLogs:s,open:i}})),_.command("lint [files...]").option("-s, --styles","lint styles only",!1).option("-h, --html","lint html only",!1).option("-j, --javascript","lint javascript only",!1).description("lint html, css and js files").action(G.make(I,(t,s)=>{const{styles:i,html:e,javascript:o}=t,r=s&&s.length?s:null;return i||e||o?{styles:i,html:e,javascript:o,files:r}:{styles:!0,html:!0,javascript:!0,files:r}})),_.command("test").option("-n, --not-open","should open test report in browser",!1).option("-l, --logs","should log details to console during run",!1).description("run tests").action(G.make(class extends N{constructor(){super(...arguments),this.backstop=new P(this.rootDir),this.jest=new E,this.cypress=new V(this.rootDir),this.layout=()=>{this.backstop.test()},this.layoutDOM=t=>{this.cypress.run(t)},this.javascript=()=>{this.jest.once()},this.typescript=()=>{this.jest.once()}}common(){}},t=>{const{"not-open":s,logs:i}=t;return{open:!s,showLogs:i}})),_.command("build").description("create production ready build").action(G.make(H)),_.command("deploy").option("-l, --logs","show internal commands logs",!1).description("deploy application to gh-pages").action(G.make(class extends N{constructor(){super(...arguments),this.buildCommand=this.child(H),this.destinationDir=r.join(this.rootDir,"dist"),this.packageDir=r.join(this.rootDir,"node_modules","@mate-academy","scripts"),this.deployScriptFile=r.join(this.packageDir,"bash-scripts","deploy-layout.sh"),this.backstop=new P(this.rootDir),this.layout=async t=>{await this.setShellRunner();const{shouldShowInternalLogs:s}=t;await this.buildCommand.run(),console.log("Start deploy to gh-pages. Please wait, it may take up to minute.\n");try{this.copyHtmlReport(),this.commitBuild(s),this.runDeployBashScript(s),console.log("[32mSuccessfully deployed to gh-pages!\n[0m")}catch(t){console.error("[31mDeploy error: ",t.message,"[0m")}},this.layoutDOM=async t=>{await this.layout(t)}}common(t){}async setShellRunner(){try{await u("sh --version",{shouldBindStdout:!1}),this.shellRunner="sh"}catch(t){try{await u("bash --version",{shouldBindStdout:!1}),this.shellRunner="bash"}catch(t){try{await u("zsh --version",{shouldBindStdout:!1}),this.shellRunner="zsh"}catch(t){console.error('[31mDeploy skipped\nPlease run deploy in "Git bash" terminal',"[0m"),process.exit(0)}}}}copyHtmlReport(){try{n.copySync(r.join(this.backstop.reportDir),r.join(this.destinationDir,"./report"))}catch(t){console.error("[33mWarning: No html_report[0m")}}commitBuild(t){p(`git add ${this.destinationDir} -f`,t),p('git commit -m "make build" --no-verify',t)}runDeployBashScript(t){p(`${this.shellRunner} ${this.deployScriptFile} dist`,t,this.rootDir)}},t=>{const{logs:s}=t;return{shouldShowInternalLogs:s}})),_.command("update").description("update @mate-academy/scripts").action(G.make(class extends N{constructor(t){super(t),this.layout=()=>{},this.layoutDOM=()=>{},this.javascript=()=>{},this.react=()=>{},this.reactTypescript=()=>{},this.mateScriptsPackageService=new x(c)}async common(){await this.updateMateScriptsVersions(),p("npx mate-scripts init")}async updateMateScriptsVersions(){await this.mateScriptsPackageService.update({envs:{global:!0,local:!0}})}})),_.command("migrate <type>").description("(global) migrate project to @mate-academy/scripts").action(G.make(M,(t,s)=>({projectType:s}),!0)),_.parse(process.argv);
